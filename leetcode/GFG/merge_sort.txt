void merge(int arr[],int l, int m, int r){
vector<int> temp;
int left=l;
int right = m+1;
while(left <= mid && right <= r){
    if(arr[left] <= arr[right]){
        temp.push_back(arr[left]);
        left++;
    }
    else{
        temp.push_back(arr[right]);
        right++;
    }
}
while(left <=mid){
    temp.push_back(arr[left]);
        left++;
}
while(right<=high){
    temp.push_back(arr[right]);
    right++;
}
for(auto i=l;i<=r;i++){
    arr[i]= temp[i-l];
}
}
void mergeSort(int arr[], int l, int r){
    if(l==r) return;
    int mid=(l+r)/2;
    mergeSort(arr,l,mid);
    mergeSort(arr,mid+1,r);
    merge(arr,l,mid,r);
}